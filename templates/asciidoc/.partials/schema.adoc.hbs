{{#if renderSlug}}[[{{schema.slug}}]]{{/if}}
// tag::title[]
{{#unless hideTitle}}{{#if schema.title}}== {{schema.title}} Document{{else}} == {{schemaName}} Document{{/if}}{{/unless}}
// end::title[]

// tag::description[]
{{{schema.description}}}
// end::description[]

// tag::properties[]
[cols="1,2,4a",option="header"]
|===
| Name | Type | Description
{{#if schema.properties}}
{{#each schema.properties}}
{{> schemaProp prop=. propName=@key required=(isRequired ../schema @key) path='' omitReadOnly=../omitReadOnly}}
{{/each}}
{{else}}
{{> schemaProp prop=schema propName=schemaName required=(isRequired ../schema @key) path='' omitReadOnly=../omitReadOnly}}
{{/if}}
|===
// end::properties[]

// tag::examples[]
{{#unless hideExamples}}
[.accordionize]
--
.Example {{#if schema.title}}{{schema.title}}{{else}}{{schemaName}}{{/if}}
[%collapsible]
====
[source,json]
----
{{#if schema.example}}
{{{stringify schema.example}}}
{{else}}
{{#if schema.generatedExample}}
{{{stringify schema.generatedExample}}}
{{/if}}
{{/if}}
----
====
--
{{/unless}}
// end::examples[]
